const express = require('express');
const { measurement_unitsController } = require('../controllers');
const { verifyToken, checkPermission } = require('../middlewares/jwt.middleware');

// üõ°Ô∏è IMPORTAR RATE LIMITING PARA UNIDADES DE MEDIDA
const {
    createSmartRateLimit
} = require('../middlewares/smartRateLimit.middleware');

const router = express.Router();

// üõ°Ô∏è CONFIGURAR LIMITADOR ESPEC√çFICO PARA CAT√ÅLOGO DE UNIDADES DE MEDIDA
// Consulta de referencia para formularios de creaci√≥n/edici√≥n de productos
const measurementUnitsLimiter = createSmartRateLimit({
    windowMs: 15 * 60 * 1000,        // 15 minutos
    maxByIP: 30,                     // 30 por IP (fallback)
    maxByUser: 100,                  // 100 consultas por usuario (generoso para cat√°logo)
    message: "L√≠mite de consultas de unidades de medida alcanzado",
    trustedIPs: [],
    skipSuccessfulRequests: true,    // Solo contar consultas fallidas (es cat√°logo de referencia)
    enableOwnerBonus: false          // Sin bonus - es informaci√≥n de cat√°logo igual para todos
});

// api/measurement_units/

// üìè OBTENER CAT√ÅLOGO DE UNIDADES DE MEDIDA - L√≠mite generoso (consulta de referencia)
// Para formularios de creaci√≥n/edici√≥n de productos e insumos
router.get('/',
    verifyToken,
    measurementUnitsLimiter,        
    measurement_unitsController.list
);

module.exports = router;