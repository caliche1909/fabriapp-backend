const express = require('express');
const { companyController } = require('../controllers');
const { verifyToken, checkPermission } = require('../middlewares/jwt.middleware');

// üõ°Ô∏è IMPORTAR RATE LIMITING PARA OPERACIONES DE EMPRESA
const {
    createSmartRateLimit
} = require('../middlewares/smartRateLimit.middleware');

const router = express.Router();

// üõ°Ô∏è CONFIGURAR LIMITADOR ESPEC√çFICO PARA CAMBIO DE EMPRESA POR DEFECTO
const changeDefaultCompanyLimiter = createSmartRateLimit({
    windowMs: 15 * 60 * 1000,        // 15 minutos
    maxByIP: 10,                     // 10 por IP (para casos sin autenticaci√≥n)
    maxByUser: 50,                   // 30 cambios por usuario cada 15 minutos
    message: "Haz alcanzado el l√≠mite de cambios de empresa por defecto, intente m√°s tarde",
    trustedIPs: [],                  // Agregar IPs de tu equipo administrativo si es necesario
    enableOwnerBonus: false          // Sin bonus para esta operaci√≥n espec√≠fica
});

// api/company/

// üîÑ CAMBIAR EMPRESA POR DEFECTO - L√≠mite espec√≠fico (30/15min)
// Operaci√≥n de actualizaci√≥n con l√≠mite personalizado
router.put('/update_is_default_true/:id',
    verifyToken,                     // Verificar autenticaci√≥n
    changeDefaultCompanyLimiter,     // Rate limiting espec√≠fico (30 peticiones/15min por usuario)
    checkPermission('update_company_settings'), // Verificar permisos
    companyController.updateIsDefaultTrue
);

// üìù ACTUALIZAR DATOS DE UNA COMPA√ë√çA
router.put('/update/:id',
    verifyToken,                     // Verificar autenticaci√≥n
    checkPermission('update_company_settings'), // Verificar permisos
    companyController.updateCompanyById
);

module.exports = router;